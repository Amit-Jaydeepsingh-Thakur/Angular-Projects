Link-https://leetcode.com/problems/permutation-sequence/discuss/22507/%22Explain-like-I'm-five%22-Java-Solution-in-O(n)
class Solution {
    public String getPermutation(int n, int k) 
    {
      int pos=0,sum=1;
      List<Integer> nums=new ArrayList<>();
      int fact[];
      fact=new int[n+1];
      fact[0]=1;
      for(int i=1;i<=n;i++)
      {
        sum*=i;
        fact[i]=sum;
      }
      for(int i=1;i<=n;i++)
      {
        nums.add(i);
      }
      k--;
      StringBuilder sb=new StringBuilder();
      for(int i=1;i<=n;i++)
      {
        int index=k/fact[n-i];
        sb.append(String.valueOf(nums.get(index)));
        nums.remove(index);
        k=k-index*fact[n-i];
      }
      return(String.valueOf(sb));
      
        
    }
}
