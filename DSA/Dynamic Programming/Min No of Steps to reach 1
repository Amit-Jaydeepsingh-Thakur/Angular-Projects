// Problem is to reach the minimum no of steps by n-1 either n/2  either n/3

import java.util.*;
import java.lang.*;

class Solution
{
    public static int solve(int n,int [] dp)
    {
        if(n==1)
        {
            return(0);
        }
        
        if(dp[n]!=0)
        {
            return(dp[n]);
        }
        int opt1=solve(n-1,dp);
        int minStep=opt1;
        
        if(n%2==0)
        {
            int opt2=solve(n/2,dp);
            if(opt2<minStep)
            {
                minStep=opt2;
            }
        }
        
        if(n%3==0)
        {
            int opt3=solve(n/3,dp);
            if(opt3<minStep)
            {
                minStep=opt3;
            }
        }
        dp[n]=minStep+1;
        return(minStep+1);
    }
    
    public static void main(String args[])
    {
        int n=10,ret=0;
        int dp[];
        dp=new int[n+1];
        ret=solve(n,dp);
        System.out.println(ret);
    }
}

