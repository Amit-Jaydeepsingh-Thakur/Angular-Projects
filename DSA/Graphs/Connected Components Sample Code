Link-https://leetcode.com/problems/friend-circles/submissions/

class Solution {
    public int findCircleNum(int[][] M) 
    {
      int i=0,j=0,ans=0;
      ans=BFS(ans,M);
      return(ans);
    }
  
  public int BFS(int ans,int [][]adjM)
  {
    int v=adjM.length;
    boolean visited[];
    visited=new boolean[v];
    
    for(int i=0;i<v;i++)
    {
      if(visited[i]!=true)
      {
        ans++;
        BFSHelper(adjM,visited,i);
      }
      
    }
    return(ans);
  }
  
  public void BFSHelper(int [][]adjM,boolean [] visited,int sv)
  {
    int v=adjM.length;
    visited[sv]=true;
    Queue<Integer>q=new LinkedList<>();
    q.add(sv);
    while(!q.isEmpty())
    {
      int front=q.poll();
      for(int i=0;i<v;i++)
      {
        if(adjM[front][i]==1 && visited[i]==false)
        {
          visited[i]=true;
          q.add(i);
        }
      }
    }
  }
}
